#!/usr/bin/env node
// shbang and chmod -x means this file can be run by bash
// or I can just tell heroku to run it with node...
// https://github.com/segmentio/nightmare/issues/497
// https://github.com/oscarmorrison/nightmare-heroku
const Nightmare = require('nightmare')
const cheerio = require('cheerio')
const got = require('got')

const spookbot = Nightmare({show: false})
const METSERVICE_WELLY_URL = 'https://www.metservice.com/towns-cities/wellington/wellington-city'
const SAVE_DATA_URL = process.env.UU_EYE_DEE ? `https://met-server-nz.herokuapp.com/api/v1/${process.env.UU_EYE_DEE}/save_scrape_data` : 'http://localhost:3000/api/v1/local/save_scrape_data'

/* Scrape engine, vroom vroom
    returns String: `date,description,maxTemp,minTemp`
*/
console.log('BEGIN')

spookbot
.goto(METSERVICE_WELLY_URL)
.wait(300) // can accept a css selector also but I will do with MS first
.evaluate(() => document.body.innerHTML) // evaluate runs in headless-browser console
.end()
.then(response => {
  console.log('Spooked ya!')
  const $ = cheerio.load(response)

  // Get desc, temp and timestamp
  const todayElement = $('[class*="active today"]') // rely on this class to find today
  const todayTitle = $(todayElement).find('h3').text() === 'Today'
  // lil error handler: future proof your homes
  if(!todayTitle) {
    return console.error(line + '     OHSNAP' + line + '\nLooks like metservice has changed the DOM of their site. Please contact Joe asap.\n...Hey Joe, they changed the DOM.')
  }
  // util
  const getTodayTextData = function getTextByClassName(dataPoint) {
    const result = $(todayElement).find(`[class*="${dataPoint}"]`).text()
    // todo: check result exists/looks allg before returning. Exists&&type 'string' might be enough?
    return result
  }
  // formatting formation!
  const date = getTodayTextData('date')
  const description = getTodayTextData('icon').toLowerCase()
  const maxTemp = getTodayTextData('high').split(' ')[0]
  const minTemp = getTodayTextData('low').split(' ')[0]
  const timestamp = Date()
  // get rain amount at time of day
  // start construction site
  const rainTimesElements = $('tr[class="times"]>th')
  const rainTimesAMPM = Object.keys(rainTimesElements)
    .slice(0, 12)
    .map(key => $(rainTimesElements[key]).text())
  const rainAmountElements = $('tr[class="rain"]>td') // is object of cheerio DOM elements
  const rainAmountsMM = Object.keys(rainAmountElements)
    .slice(0, 12) // there are way more than 12?? some hidden dom elements
    .map(key => {
      return $(rainAmountElements[key])
        .text()
        .substring(0, 3) // some = '0.0Rain in MM blah blah blah' I only want first 3 char
    })
  const willRain = rainAmountsMM.find(amount => amount > 0.0) // bool
  const rainAtTimeString = willRain ? getRainAtString() : 'No rain nurries'
  function getRainAtString () {
    return rainAmountsMM.reduce((acc, amount, i) => {
      if(amount > 0.0) {
        acc += `${amount}mm@${rainTimesAMPM[i]}`
      }
      return acc
    }, '')
  }
  // end construction site

  // format all collected data into string for DB entry
  const weatherDataString = `'${date}','${description}','${maxTemp}','${minTemp}','${timestamp}','${rainAtTimeString}'`

  // just gonna send it
  console.log('fineesh', weatherDataString)
  return got.post(SAVE_DATA_URL, {
    body: weatherDataString,
    headers: { 'Content-Type': 'text/plain' }
  })
  .then(() => process.exit())
  .catch(e => console.error('\n\noh no\n\n', e))
})
